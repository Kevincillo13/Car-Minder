<!DOCTYPE html>
<html lang="es">
<head>
    <!--en head se incluyen dependencias del archivo. Como lo son los archivos de estilos, fuentes de texto u otros.-->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registrate</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Gabarito&display=swap" rel="stylesheet">
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="/assets/styles.css"/> 
</head>
    <div class=" text-center flex-auto px-10"><!--Se declara la clase px para dar un padding en el eje X -->
        <div class=" sm:w-[70%] md:w-[70%] lg:w-[70%]   text-xl bold container  mt-12 md:flex mx-auto    duration-500  rounded-md text-center ">
            <!-- Se añaden clases para establecer un limite al area, usando las clases sm-md-lg que declaran ciertas propiedades segun el tamaño de la pantalla. Se declaran colores de fondo con la clase bg.
            Rounded: Establece bordes redondos.     Text-"": Establece la alineación del texto.     mx-auto: Da un margen en el eje X segun el espacio disponible -->
            <!-- Se inicia un formato de form en el que incluiremos entradas de datos por parte del usuario. Para el apartado registro-->
            <!-- Se utilizan las etiquetas label para asociar un elemento de formulario con un texto -->
            <!-- Se utiliza la etiquete input para permitir una entrada de datos por parte del usuario-->
            <div class=" bg-sky-800 px-10 align-middle py-16 flex-auto ">
                <form class=" py-5" method="post" action="/register">
                    <!-- Se utilizan las etiquetas label para asociar un elemento de formulario con un texto -->
                    <!-- Se utiliza la etiquete input para permitir una entrada de datos por parte del usuario--><!---->
                    <!--Se declaran IDs a los distinto datos entrantes, ya sean registrados o por registrar-->  
                    <h2 class=" bg-sky-800 text-center text-4xl  mb-10  py-5">Registrarse</h2>
                        <label for="nombre_u" class="block text-xl text-white">Nombre</label>
                        <input type="text" id="nombre_u" name="nombre_u" class="rounded-md shadow-lg px-4 py-2 mt-4">
                        <label for="apellido_u" class="block text-xl mt-4 text-white">Apellido</label>
                        <input type="text" id="apellido_u" name="apellido_u" class="rounded-md shadow-lg px-4 py-2 mt-4">
                        <label for="correo_u" class="block text-xl mt-4 text-white">Email</label>
                        <input type="text" id="correo_u" name="correo_u" class="rounded-md shadow-lg px-4 py-2 mt-4">
                        <label for="contraseña_u" class="block text-xl mt-4 text-white">Contraseña</label>
                        <input type="password" id="contraseña_u" name="contraseña_u" class="rounded-md shadow-lg px-4 py-2 mt-4">
                        <label for="iniciar"  class="block  text-xl mt-4"></label>
                        <button type="submit" class="bg-sky-100 rounded-md px-10 py-3 duration-700 hover:bg-sky-500 shadow-lg mt-4">Registrarse</button>
                    </form>
            </div>
        </div>

        
    </div>

</body>
</html>

<script>
    // Obtener referencias a los campos del formulario
    const nombreInput = document.getElementById('nombre_u');
    const apellidoInput = document.getElementById('apellido_u');
    const correoInput = document.getElementById('correo_u');
    const contraseñaInput = document.getElementById('contraseña_u');
    const formulario = document.querySelector('form');
  
    formulario.addEventListener('submit', function (event) {
      if (!validarCampos()) {
        event.preventDefault(); // Evitar el envío del formulario si la validación falla
      }
    });
  
    function validarCampos() {
      // Valida que el campo de nombre no esté vacío
      if (nombreInput.value.trim() === '') {
        alert('Por favor, ingrese su nombre.');
        return false;
      }
  
      // Valida que el campo de apellido no esté vacío
      if (apellidoInput.value.trim() === '') {
        alert('Por favor, ingrese su apellido.');
        return false;
      }
  
      // Valida que el campo de correo sea un correo electrónico válido
      if (!validarCorreo(correoInput.value)) {
        alert('Por favor, ingrese un correo electrónico válido.');
        return false;
      }
  
      // Valida que la contraseña no esté vacía y cumpla con tus criterios (longitud máxima, etc.)
      if (!validarContraseña(contraseñaInput.value)) {
        alert('Por favor, ingrese una contraseña válida.');
        return false;
      }
  
      return true; // Todos los campos son válidos
    }
  
    function validarCorreo(correo) {
      // Utiliza una expresión regular para verificar si es un correo electrónico válido
      return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(correo);
    }
  
    function validarContraseña(contraseña) {
      // Agrega tus criterios de validación de contraseña aquí
      // Por ejemplo, si deseas verificar una longitud máxima:
      return contraseña.length <= 50;
    }
  </script>
  